@startuml

skinparam component {
    backgroundColor<<dev>> #8577a0
    backgroundColor<<external>> #85fff0
    backgroundColor<<internal>> #85bbf0
}

component "Платежная система" as PaymentSystem <<external>>
component "Сервис авторизации" as AuthService <<external>>
component "Сервис нотификации" as NotificationService <<external>>
component InvoiceStatesQueue <<external>>
note bottom of InvoiceStatesQueue
    RabbitMQ
end note

component PaymentGateway {
    component GetInvoicesView <<internal>>
    component CreateInvoiceView <<internal>>
    component RefundInvoiceView <<internal>>

    component PaymentWebhook <<internal>>
}

database PaymentGatewayDb
PaymentGateway <--> PaymentGatewayDb

PaymentWebhook .up.> InvoiceStatesQueue: Отправить сообщения о статусе invoice
AuthService .left.> InvoiceStatesQueue: Получить сообщение о статусе invoice

AuthService --> CreateInvoiceView: Создать инвойс \n [http json]
AuthService --> RefundInvoiceView: Вернуть деньги \n [http json]
AuthService --> GetInvoicesView: Получить список инвойсов [http json]

CreateInvoiceView --> AuthService: Запросить данные пользователя
CreateInvoiceView --> PaymentSystem: Создать платеж

PaymentSystem -up-> PaymentWebhook

PaymentWebhook --> NotificationService: Изменить статуса оплаты
CreateInvoiceView --> NotificationService: Сообщить о созданиии инвойса
RefundInvoiceView --> NotificationService: Сообщить о запросе на возврат денег

@enduml
