"""Add table UserInvoice, Products

Revision ID: a6546caf42ae
Revises: 7729a37a50cb
Create Date: 2022-04-20 00:51:57.093156

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a6546caf42ae'
down_revision = '7729a37a50cb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_name', sa.Text(), nullable=True),
    sa.Column('cost', sa.Float(precision=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.CheckConstraint('cost > 0', name='check_cost_positive'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_invoice',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('invoice_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('payment_status', sa.Enum('paid', 'unpaid', name='status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('request_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('invoice_due_date', sa.DateTime(), nullable=True),
    sa.CheckConstraint('amount > 0', name='check_amount_positive'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'product_id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('invoice_id'),
    sa.UniqueConstraint('request_id')
    )
    op.create_unique_constraint(None, 'auth_history', ['id'])
    op.create_unique_constraint(None, 'role', ['id'])
    op.create_unique_constraint(None, 'role_user', ['id'])
    op.create_unique_constraint(None, 'social_account', ['id'])
    op.create_unique_constraint(None, 'user', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'social_account', type_='unique')
    op.drop_constraint(None, 'role_user', type_='unique')
    op.drop_constraint(None, 'role', type_='unique')
    op.drop_constraint(None, 'auth_history', type_='unique')
    op.drop_table('user_invoice')
    op.drop_table('products')
    # ### end Alembic commands ###
